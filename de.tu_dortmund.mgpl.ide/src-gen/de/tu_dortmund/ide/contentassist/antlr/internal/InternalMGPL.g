/*
 * generated by Xtext 2.20.0
 */
grammar InternalMGPL;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package de.tu_dortmund.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.tu_dortmund.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.tu_dortmund.services.MGPLGrammarAccess;

}
@parser::members {
	private MGPLGrammarAccess grammarAccess;

	public void setGrammarAccess(MGPLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDecl
entryRuleDecl
:
{ before(grammarAccess.getDeclRule()); }
	 ruleDecl
{ after(grammarAccess.getDeclRule()); } 
	 EOF 
;

// Rule Decl
ruleDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclAccess().getGroup()); }
		(rule__Decl__Group__0)
		{ after(grammarAccess.getDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDecl
entryRuleVarDecl
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDeclAccess().getAlternatives()); }
		(rule__VarDecl__Alternatives)
		{ after(grammarAccess.getVarDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScalarVarDecl
entryRuleScalarVarDecl
:
{ before(grammarAccess.getScalarVarDeclRule()); }
	 ruleScalarVarDecl
{ after(grammarAccess.getScalarVarDeclRule()); } 
	 EOF 
;

// Rule ScalarVarDecl
ruleScalarVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScalarVarDeclAccess().getGroup()); }
		(rule__ScalarVarDecl__Group__0)
		{ after(grammarAccess.getScalarVarDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayVarDecl
entryRuleArrayVarDecl
:
{ before(grammarAccess.getArrayVarDeclRule()); }
	 ruleArrayVarDecl
{ after(grammarAccess.getArrayVarDeclRule()); } 
	 EOF 
;

// Rule ArrayVarDecl
ruleArrayVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayVarDeclAccess().getGroup()); }
		(rule__ArrayVarDecl__Group__0)
		{ after(grammarAccess.getArrayVarDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjDecl
entryRuleObjDecl
:
{ before(grammarAccess.getObjDeclRule()); }
	 ruleObjDecl
{ after(grammarAccess.getObjDeclRule()); } 
	 EOF 
;

// Rule ObjDecl
ruleObjDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjDeclAccess().getGroup()); }
		(rule__ObjDecl__Group__0)
		{ after(grammarAccess.getObjDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjArrayDecl
entryRuleObjArrayDecl
:
{ before(grammarAccess.getObjArrayDeclRule()); }
	 ruleObjArrayDecl
{ after(grammarAccess.getObjArrayDeclRule()); } 
	 EOF 
;

// Rule ObjArrayDecl
ruleObjArrayDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjArrayDeclAccess().getGroup()); }
		(rule__ObjArrayDecl__Group__0)
		{ after(grammarAccess.getObjArrayDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttrAssList
entryRuleAttrAssList
:
{ before(grammarAccess.getAttrAssListRule()); }
	 ruleAttrAssList
{ after(grammarAccess.getAttrAssListRule()); } 
	 EOF 
;

// Rule AttrAssList
ruleAttrAssList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttrAssListAccess().getGroup()); }
		(rule__AttrAssList__Group__0)
		{ after(grammarAccess.getAttrAssListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttrAss
entryRuleAttrAss
:
{ before(grammarAccess.getAttrAssRule()); }
	 ruleAttrAss
{ after(grammarAccess.getAttrAssRule()); } 
	 EOF 
;

// Rule AttrAss
ruleAttrAss 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttrAssAccess().getGroup()); }
		(rule__AttrAss__Group__0)
		{ after(grammarAccess.getAttrAssAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlock
entryRuleBlock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getAlternatives()); }
		(rule__Block__Alternatives)
		{ after(grammarAccess.getBlockAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnimBlock
entryRuleAnimBlock
:
{ before(grammarAccess.getAnimBlockRule()); }
	 ruleAnimBlock
{ after(grammarAccess.getAnimBlockRule()); } 
	 EOF 
;

// Rule AnimBlock
ruleAnimBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnimBlockAccess().getGroup()); }
		(rule__AnimBlock__Group__0)
		{ after(grammarAccess.getAnimBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnimTarget
entryRuleAnimTarget
:
{ before(grammarAccess.getAnimTargetRule()); }
	 ruleAnimTarget
{ after(grammarAccess.getAnimTargetRule()); } 
	 EOF 
;

// Rule AnimTarget
ruleAnimTarget 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnimTargetAccess().getGroup()); }
		(rule__AnimTarget__Group__0)
		{ after(grammarAccess.getAnimTargetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventBlock
entryRuleEventBlock
:
{ before(grammarAccess.getEventBlockRule()); }
	 ruleEventBlock
{ after(grammarAccess.getEventBlockRule()); } 
	 EOF 
;

// Rule EventBlock
ruleEventBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventBlockAccess().getGroup()); }
		(rule__EventBlock__Group__0)
		{ after(grammarAccess.getEventBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStmtBlock
entryRuleStmtBlock
:
{ before(grammarAccess.getStmtBlockRule()); }
	 ruleStmtBlock
{ after(grammarAccess.getStmtBlockRule()); } 
	 EOF 
;

// Rule StmtBlock
ruleStmtBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStmtBlockAccess().getGroup()); }
		(rule__StmtBlock__Group__0)
		{ after(grammarAccess.getStmtBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStmt
entryRuleStmt
:
{ before(grammarAccess.getStmtRule()); }
	 ruleStmt
{ after(grammarAccess.getStmtRule()); } 
	 EOF 
;

// Rule Stmt
ruleStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStmtAccess().getAlternatives()); }
		(rule__Stmt__Alternatives)
		{ after(grammarAccess.getStmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStmt
entryRuleIfStmt
:
{ before(grammarAccess.getIfStmtRule()); }
	 ruleIfStmt
{ after(grammarAccess.getIfStmtRule()); } 
	 EOF 
;

// Rule IfStmt
ruleIfStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStmtAccess().getGroup()); }
		(rule__IfStmt__Group__0)
		{ after(grammarAccess.getIfStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForStmt
entryRuleForStmt
:
{ before(grammarAccess.getForStmtRule()); }
	 ruleForStmt
{ after(grammarAccess.getForStmtRule()); } 
	 EOF 
;

// Rule ForStmt
ruleForStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStmtAccess().getGroup()); }
		(rule__ForStmt__Group__0)
		{ after(grammarAccess.getForStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssStmt
entryRuleAssStmt
:
{ before(grammarAccess.getAssStmtRule()); }
	 ruleAssStmt
{ after(grammarAccess.getAssStmtRule()); } 
	 EOF 
;

// Rule AssStmt
ruleAssStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssStmtAccess().getGroup()); }
		(rule__AssStmt__Group__0)
		{ after(grammarAccess.getAssStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVar
entryRuleVar
:
{ before(grammarAccess.getVarRule()); }
	 ruleVar
{ after(grammarAccess.getVarRule()); } 
	 EOF 
;

// Rule Var
ruleVar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarAccess().getAlternatives()); }
		(rule__Var__Alternatives)
		{ after(grammarAccess.getVarAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpr
entryRuleExpr
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprAccess().getOrExprParserRuleCall()); }
		ruleOrExpr
		{ after(grammarAccess.getExprAccess().getOrExprParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpr
entryRuleOrExpr
:
{ before(grammarAccess.getOrExprRule()); }
	 ruleOrExpr
{ after(grammarAccess.getOrExprRule()); } 
	 EOF 
;

// Rule OrExpr
ruleOrExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExprAccess().getGroup()); }
		(rule__OrExpr__Group__0)
		{ after(grammarAccess.getOrExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolExpr
entryRuleBoolExpr
:
{ before(grammarAccess.getBoolExprRule()); }
	 ruleBoolExpr
{ after(grammarAccess.getBoolExprRule()); } 
	 EOF 
;

// Rule BoolExpr
ruleBoolExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolExprAccess().getGroup()); }
		(rule__BoolExpr__Group__0)
		{ after(grammarAccess.getBoolExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelExpr
entryRuleRelExpr
:
{ before(grammarAccess.getRelExprRule()); }
	 ruleRelExpr
{ after(grammarAccess.getRelExprRule()); } 
	 EOF 
;

// Rule RelExpr
ruleRelExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelExprAccess().getGroup()); }
		(rule__RelExpr__Group__0)
		{ after(grammarAccess.getRelExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddExpr
entryRuleAddExpr
:
{ before(grammarAccess.getAddExprRule()); }
	 ruleAddExpr
{ after(grammarAccess.getAddExprRule()); } 
	 EOF 
;

// Rule AddExpr
ruleAddExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddExprAccess().getGroup()); }
		(rule__AddExpr__Group__0)
		{ after(grammarAccess.getAddExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulExpr
entryRuleMulExpr
:
{ before(grammarAccess.getMulExprRule()); }
	 ruleMulExpr
{ after(grammarAccess.getMulExprRule()); } 
	 EOF 
;

// Rule MulExpr
ruleMulExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulExprAccess().getGroup()); }
		(rule__MulExpr__Group__0)
		{ after(grammarAccess.getMulExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleExpr
entryRuleSimpleExpr
:
{ before(grammarAccess.getSimpleExprRule()); }
	 ruleSimpleExpr
{ after(grammarAccess.getSimpleExprRule()); } 
	 EOF 
;

// Rule SimpleExpr
ruleSimpleExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleExprAccess().getAlternatives()); }
		(rule__SimpleExpr__Alternatives)
		{ after(grammarAccess.getSimpleExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr
:
{ before(grammarAccess.getUnaryExprRule()); }
	 ruleUnaryExpr
{ after(grammarAccess.getUnaryExprRule()); } 
	 EOF 
;

// Rule UnaryExpr
ruleUnaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExprAccess().getGroup()); }
		(rule__UnaryExpr__Group__0)
		{ after(grammarAccess.getUnaryExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberExpr
entryRuleNumberExpr
:
{ before(grammarAccess.getNumberExprRule()); }
	 ruleNumberExpr
{ after(grammarAccess.getNumberExprRule()); } 
	 EOF 
;

// Rule NumberExpr
ruleNumberExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberExprAccess().getNumberAssignment()); }
		(rule__NumberExpr__NumberAssignment)
		{ after(grammarAccess.getNumberExprAccess().getNumberAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarExpr
entryRuleVarExpr
:
{ before(grammarAccess.getVarExprRule()); }
	 ruleVarExpr
{ after(grammarAccess.getVarExprRule()); } 
	 EOF 
;

// Rule VarExpr
ruleVarExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarExprAccess().getVarAssignment()); }
		(rule__VarExpr__VarAssignment)
		{ after(grammarAccess.getVarExprAccess().getVarAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ObjType
ruleObjType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjTypeAccess().getAlternatives()); }
		(rule__ObjType__Alternatives)
		{ after(grammarAccess.getObjTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule KeyStroke
ruleKeyStroke
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyStrokeAccess().getAlternatives()); }
		(rule__KeyStroke__Alternatives)
		{ after(grammarAccess.getKeyStrokeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclAccess().getObjDeclParserRuleCall_0_0()); }
		ruleObjDecl
		{ after(grammarAccess.getDeclAccess().getObjDeclParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclAccess().getObjArrayDeclParserRuleCall_0_1()); }
		ruleObjArrayDecl
		{ after(grammarAccess.getDeclAccess().getObjArrayDeclParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeclAccess().getVarDeclParserRuleCall_0_2()); }
		ruleVarDecl
		{ after(grammarAccess.getDeclAccess().getVarDeclParserRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getScalarVarDeclParserRuleCall_0()); }
		ruleScalarVarDecl
		{ after(grammarAccess.getVarDeclAccess().getScalarVarDeclParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarDeclAccess().getArrayVarDeclParserRuleCall_1()); }
		ruleArrayVarDecl
		{ after(grammarAccess.getVarDeclAccess().getArrayVarDeclParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getAnimBlockParserRuleCall_0()); }
		ruleAnimBlock
		{ after(grammarAccess.getBlockAccess().getAnimBlockParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlockAccess().getEventBlockParserRuleCall_1()); }
		ruleEventBlock
		{ after(grammarAccess.getBlockAccess().getEventBlockParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStmtAccess().getIfStmtParserRuleCall_0()); }
		ruleIfStmt
		{ after(grammarAccess.getStmtAccess().getIfStmtParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStmtAccess().getForStmtParserRuleCall_1()); }
		ruleForStmt
		{ after(grammarAccess.getStmtAccess().getForStmtParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStmtAccess().getAssStmtParserRuleCall_2()); }
		ruleAssStmt
		{ after(grammarAccess.getStmtAccess().getAssStmtParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getVariableAssignment_0()); }
		(rule__Var__VariableAssignment_0)
		{ after(grammarAccess.getVarAccess().getVariableAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarAccess().getGroup_1()); }
		(rule__Var__Group_1__0)
		{ after(grammarAccess.getVarAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getVarAccess().getGroup_2()); }
		(rule__Var__Group_2__0)
		{ after(grammarAccess.getVarAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelExprAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
		'=='
		{ after(grammarAccess.getRelExprAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelExprAccess().getOpLessThanSignKeyword_1_1_0_1()); }
		'<'
		{ after(grammarAccess.getRelExprAccess().getOpLessThanSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelExprAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_2()); }
		'<='
		{ after(grammarAccess.getRelExprAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExprAccess().getOpPlusSignKeyword_1_1_0_0()); }
		'+'
		{ after(grammarAccess.getAddExprAccess().getOpPlusSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddExprAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
		'-'
		{ after(grammarAccess.getAddExprAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulExprAccess().getOpAsteriskKeyword_1_1_0_0()); }
		'*'
		{ after(grammarAccess.getMulExprAccess().getOpAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulExprAccess().getOpSolidusKeyword_1_1_0_1()); }
		'/'
		{ after(grammarAccess.getMulExprAccess().getOpSolidusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleExprAccess().getUnaryExprParserRuleCall_0()); }
		ruleUnaryExpr
		{ after(grammarAccess.getSimpleExprAccess().getUnaryExprParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleExprAccess().getNumberExprParserRuleCall_1()); }
		ruleNumberExpr
		{ after(grammarAccess.getSimpleExprAccess().getNumberExprParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleExprAccess().getGroup_2()); }
		(rule__SimpleExpr__Group_2__0)
		{ after(grammarAccess.getSimpleExprAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getSimpleExprAccess().getGroup_3()); }
		(rule__SimpleExpr__Group_3__0)
		{ after(grammarAccess.getSimpleExprAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__OpAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getOpHyphenMinusKeyword_0_0_0()); }
		'-'
		{ after(grammarAccess.getUnaryExprAccess().getOpHyphenMinusKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExprAccess().getOpExclamationMarkKeyword_0_0_1()); }
		'!'
		{ after(grammarAccess.getUnaryExprAccess().getOpExclamationMarkKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjTypeAccess().getRECTANGLEEnumLiteralDeclaration_0()); }
		('rectangle')
		{ after(grammarAccess.getObjTypeAccess().getRECTANGLEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjTypeAccess().getTRIANGLEEnumLiteralDeclaration_1()); }
		('triangle')
		{ after(grammarAccess.getObjTypeAccess().getTRIANGLEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getObjTypeAccess().getCIRCLEEnumLiteralDeclaration_2()); }
		('circle')
		{ after(grammarAccess.getObjTypeAccess().getCIRCLEEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStroke__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyStrokeAccess().getSPACEEnumLiteralDeclaration_0()); }
		('space')
		{ after(grammarAccess.getKeyStrokeAccess().getSPACEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getKeyStrokeAccess().getLEFT_ARROWEnumLiteralDeclaration_1()); }
		('leftarrow')
		{ after(grammarAccess.getKeyStrokeAccess().getLEFT_ARROWEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getKeyStrokeAccess().getRIGHT_ARROWEnumLiteralDeclaration_2()); }
		('rightarrow')
		{ after(grammarAccess.getKeyStrokeAccess().getRIGHT_ARROWEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getKeyStrokeAccess().getUP_ARROWEnumLiteralDeclaration_3()); }
		('uparrow')
		{ after(grammarAccess.getKeyStrokeAccess().getUP_ARROWEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getKeyStrokeAccess().getDOWN_ARROWEnumLiteralDeclaration_4()); }
		('downarrow')
		{ after(grammarAccess.getKeyStrokeAccess().getDOWN_ARROWEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getGameKeyword_0()); }
	'game'
	{ after(grammarAccess.getProgramAccess().getGameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getNameAssignment_1()); }
	(rule__Program__NameAssignment_1)
	{ after(grammarAccess.getProgramAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getProgramAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__3__Impl
	rule__Program__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getAttributesAssignment_3()); }
	(rule__Program__AttributesAssignment_3)?
	{ after(grammarAccess.getProgramAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__4__Impl
	rule__Program__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getProgramAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__5__Impl
	rule__Program__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getDeclarationsAssignment_5()); }
	(rule__Program__DeclarationsAssignment_5)*
	{ after(grammarAccess.getProgramAccess().getDeclarationsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__6__Impl
	rule__Program__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getInitAssignment_6()); }
	(rule__Program__InitAssignment_6)
	{ after(grammarAccess.getProgramAccess().getInitAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getBlocksAssignment_7()); }
	(rule__Program__BlocksAssignment_7)*
	{ after(grammarAccess.getProgramAccess().getBlocksAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Decl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decl__Group__0__Impl
	rule__Decl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclAccess().getAlternatives_0()); }
	(rule__Decl__Alternatives_0)
	{ after(grammarAccess.getDeclAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getDeclAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarVarDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScalarVarDecl__Group__0__Impl
	rule__ScalarVarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVarDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarVarDeclAccess().getIntKeyword_0()); }
	'int'
	{ after(grammarAccess.getScalarVarDeclAccess().getIntKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVarDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScalarVarDecl__Group__1__Impl
	rule__ScalarVarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVarDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarVarDeclAccess().getNameAssignment_1()); }
	(rule__ScalarVarDecl__NameAssignment_1)
	{ after(grammarAccess.getScalarVarDeclAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVarDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScalarVarDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVarDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarVarDeclAccess().getGroup_2()); }
	(rule__ScalarVarDecl__Group_2__0)?
	{ after(grammarAccess.getScalarVarDeclAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarVarDecl__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScalarVarDecl__Group_2__0__Impl
	rule__ScalarVarDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVarDecl__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarVarDeclAccess().getEqualsSignKeyword_2_0()); }
	'='
	{ after(grammarAccess.getScalarVarDeclAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVarDecl__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScalarVarDecl__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVarDecl__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarVarDeclAccess().getInitializationAssignment_2_1()); }
	(rule__ScalarVarDecl__InitializationAssignment_2_1)
	{ after(grammarAccess.getScalarVarDeclAccess().getInitializationAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayVarDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayVarDecl__Group__0__Impl
	rule__ArrayVarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVarDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayVarDeclAccess().getIntKeyword_0()); }
	'int'
	{ after(grammarAccess.getArrayVarDeclAccess().getIntKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVarDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayVarDecl__Group__1__Impl
	rule__ArrayVarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVarDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayVarDeclAccess().getNameAssignment_1()); }
	(rule__ArrayVarDecl__NameAssignment_1)
	{ after(grammarAccess.getArrayVarDeclAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVarDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayVarDecl__Group__2__Impl
	rule__ArrayVarDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVarDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayVarDeclAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getArrayVarDeclAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVarDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayVarDecl__Group__3__Impl
	rule__ArrayVarDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVarDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayVarDeclAccess().getSizeAssignment_3()); }
	(rule__ArrayVarDecl__SizeAssignment_3)
	{ after(grammarAccess.getArrayVarDeclAccess().getSizeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVarDecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayVarDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVarDecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayVarDeclAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getArrayVarDeclAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group__0__Impl
	rule__ObjDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getTypeAssignment_0()); }
	(rule__ObjDecl__TypeAssignment_0)
	{ after(grammarAccess.getObjDeclAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group__1__Impl
	rule__ObjDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getNameAssignment_1()); }
	(rule__ObjDecl__NameAssignment_1)
	{ after(grammarAccess.getObjDeclAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group__2__Impl
	rule__ObjDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getObjDeclAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group__3__Impl
	rule__ObjDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getAttributesAssignment_3()); }
	(rule__ObjDecl__AttributesAssignment_3)?
	{ after(grammarAccess.getObjDeclAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getObjDeclAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjArrayDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjArrayDecl__Group__0__Impl
	rule__ObjArrayDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjArrayDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjArrayDeclAccess().getTypeAssignment_0()); }
	(rule__ObjArrayDecl__TypeAssignment_0)
	{ after(grammarAccess.getObjArrayDeclAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjArrayDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjArrayDecl__Group__1__Impl
	rule__ObjArrayDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjArrayDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjArrayDeclAccess().getNameAssignment_1()); }
	(rule__ObjArrayDecl__NameAssignment_1)
	{ after(grammarAccess.getObjArrayDeclAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjArrayDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjArrayDecl__Group__2__Impl
	rule__ObjArrayDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjArrayDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjArrayDeclAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getObjArrayDeclAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjArrayDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjArrayDecl__Group__3__Impl
	rule__ObjArrayDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjArrayDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjArrayDeclAccess().getSizeAssignment_3()); }
	(rule__ObjArrayDecl__SizeAssignment_3)
	{ after(grammarAccess.getObjArrayDeclAccess().getSizeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjArrayDecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjArrayDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjArrayDecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjArrayDeclAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getObjArrayDeclAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttrAssList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssList__Group__0__Impl
	rule__AttrAssList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssListAccess().getAssignmentsAssignment_0()); }
	(rule__AttrAssList__AssignmentsAssignment_0)
	{ after(grammarAccess.getAttrAssListAccess().getAssignmentsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssListAccess().getGroup_1()); }
	(rule__AttrAssList__Group_1__0)*
	{ after(grammarAccess.getAttrAssListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttrAssList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssList__Group_1__0__Impl
	rule__AttrAssList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getAttrAssListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssListAccess().getAssignmentsAssignment_1_1()); }
	(rule__AttrAssList__AssignmentsAssignment_1_1)
	{ after(grammarAccess.getAttrAssListAccess().getAssignmentsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttrAss__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAss__Group__0__Impl
	rule__AttrAss__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssAccess().getAttributeNameAssignment_0()); }
	(rule__AttrAss__AttributeNameAssignment_0)
	{ after(grammarAccess.getAttrAssAccess().getAttributeNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAss__Group__1__Impl
	rule__AttrAss__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAttrAssAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAss__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssAccess().getValueAssignment_2()); }
	(rule__AttrAss__ValueAssignment_2)
	{ after(grammarAccess.getAttrAssAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnimBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__0__Impl
	rule__AnimBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getAnimationKeyword_0()); }
	'animation'
	{ after(grammarAccess.getAnimBlockAccess().getAnimationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__1__Impl
	rule__AnimBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getNameAssignment_1()); }
	(rule__AnimBlock__NameAssignment_1)
	{ after(grammarAccess.getAnimBlockAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__2__Impl
	rule__AnimBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getAnimBlockAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__3__Impl
	rule__AnimBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getTargetAssignment_3()); }
	(rule__AnimBlock__TargetAssignment_3)
	{ after(grammarAccess.getAnimBlockAccess().getTargetAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__4__Impl
	rule__AnimBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAnimBlockAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getActionAssignment_5()); }
	(rule__AnimBlock__ActionAssignment_5)
	{ after(grammarAccess.getAnimBlockAccess().getActionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnimTarget__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimTarget__Group__0__Impl
	rule__AnimTarget__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimTarget__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimTargetAccess().getTypeAssignment_0()); }
	(rule__AnimTarget__TypeAssignment_0)
	{ after(grammarAccess.getAnimTargetAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimTarget__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimTarget__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimTarget__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimTargetAccess().getNameAssignment_1()); }
	(rule__AnimTarget__NameAssignment_1)
	{ after(grammarAccess.getAnimTargetAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventBlock__Group__0__Impl
	rule__EventBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventBlockAccess().getOnKeyword_0()); }
	'on'
	{ after(grammarAccess.getEventBlockAccess().getOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventBlock__Group__1__Impl
	rule__EventBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventBlockAccess().getKeyAssignment_1()); }
	(rule__EventBlock__KeyAssignment_1)
	{ after(grammarAccess.getEventBlockAccess().getKeyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventBlockAccess().getActionAssignment_2()); }
	(rule__EventBlock__ActionAssignment_2)
	{ after(grammarAccess.getEventBlockAccess().getActionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StmtBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StmtBlock__Group__0__Impl
	rule__StmtBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtBlockAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getStmtBlockAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StmtBlock__Group__1__Impl
	rule__StmtBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtBlockAccess().getStmtBlockAction_1()); }
	()
	{ after(grammarAccess.getStmtBlockAccess().getStmtBlockAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StmtBlock__Group__2__Impl
	rule__StmtBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtBlockAccess().getStatementsAssignment_2()); }
	(rule__StmtBlock__StatementsAssignment_2)*
	{ after(grammarAccess.getStmtBlockAccess().getStatementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StmtBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtBlockAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getStmtBlockAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__0__Impl
	rule__IfStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__1__Impl
	rule__IfStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIfStmtAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__2__Impl
	rule__IfStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getConditionAssignment_2()); }
	(rule__IfStmt__ConditionAssignment_2)
	{ after(grammarAccess.getIfStmtAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__3__Impl
	rule__IfStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getIfStmtAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__4__Impl
	rule__IfStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getThenAssignment_4()); }
	(rule__IfStmt__ThenAssignment_4)
	{ after(grammarAccess.getIfStmtAccess().getThenAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getGroup_5()); }
	(rule__IfStmt__Group_5__0)?
	{ after(grammarAccess.getIfStmtAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_5__0__Impl
	rule__IfStmt__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getElseKeyword_5_0()); }
	('else')
	{ after(grammarAccess.getIfStmtAccess().getElseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getElseAssignment_5_1()); }
	(rule__IfStmt__ElseAssignment_5_1)
	{ after(grammarAccess.getIfStmtAccess().getElseAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__0__Impl
	rule__ForStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForStmtAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__1__Impl
	rule__ForStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getForStmtAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__2__Impl
	rule__ForStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getInitAssignment_2()); }
	(rule__ForStmt__InitAssignment_2)
	{ after(grammarAccess.getForStmtAccess().getInitAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__3__Impl
	rule__ForStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getForStmtAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__4__Impl
	rule__ForStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getConditionAssignment_4()); }
	(rule__ForStmt__ConditionAssignment_4)
	{ after(grammarAccess.getForStmtAccess().getConditionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__5__Impl
	rule__ForStmt__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getForStmtAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__6__Impl
	rule__ForStmt__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getStepAssignment_6()); }
	(rule__ForStmt__StepAssignment_6)
	{ after(grammarAccess.getForStmtAccess().getStepAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__7__Impl
	rule__ForStmt__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getForStmtAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getBodyAssignment_8()); }
	(rule__ForStmt__BodyAssignment_8)
	{ after(grammarAccess.getForStmtAccess().getBodyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getVarAssignment_0()); }
	(rule__Assignment__VarAssignment_0)
	{ after(grammarAccess.getAssignmentAccess().getVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getValueAssignment_2()); }
	(rule__Assignment__ValueAssignment_2)
	{ after(grammarAccess.getAssignmentAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssStmt__Group__0__Impl
	rule__AssStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssStmtAccess().getAssignmentParserRuleCall_0()); }
	ruleAssignment
	{ after(grammarAccess.getAssStmtAccess().getAssignmentParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssStmtAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getAssStmtAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_1__0__Impl
	rule__Var__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getVariableAssignment_1_0()); }
	(rule__Var__VariableAssignment_1_0)
	{ after(grammarAccess.getVarAccess().getVariableAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_1__1__Impl
	rule__Var__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getLeftSquareBracketKeyword_1_1()); }
	('[')
	{ after(grammarAccess.getVarAccess().getLeftSquareBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_1__2__Impl
	rule__Var__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getIndexAssignment_1_2()); }
	(rule__Var__IndexAssignment_1_2)
	{ after(grammarAccess.getVarAccess().getIndexAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_1__3__Impl
	rule__Var__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getRightSquareBracketKeyword_1_3()); }
	']'
	{ after(grammarAccess.getVarAccess().getRightSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getGroup_1_4()); }
	(rule__Var__Group_1_4__0)?
	{ after(grammarAccess.getVarAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_1_4__0__Impl
	rule__Var__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getFullStopKeyword_1_4_0()); }
	'.'
	{ after(grammarAccess.getVarAccess().getFullStopKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getAttributeAssignment_1_4_1()); }
	(rule__Var__AttributeAssignment_1_4_1)
	{ after(grammarAccess.getVarAccess().getAttributeAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_2__0__Impl
	rule__Var__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getVariableAssignment_2_0()); }
	(rule__Var__VariableAssignment_2_0)
	{ after(grammarAccess.getVarAccess().getVariableAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_2__1__Impl
	rule__Var__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getFullStopKeyword_2_1()); }
	('.')
	{ after(grammarAccess.getVarAccess().getFullStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getAttributeAssignment_2_2()); }
	(rule__Var__AttributeAssignment_2_2)
	{ after(grammarAccess.getVarAccess().getAttributeAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group__0__Impl
	rule__OrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getBoolExprParserRuleCall_0()); }
	ruleBoolExpr
	{ after(grammarAccess.getOrExprAccess().getBoolExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getGroup_1()); }
	(rule__OrExpr__Group_1__0)*
	{ after(grammarAccess.getOrExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group_1__0__Impl
	rule__OrExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getBinaryExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrExprAccess().getBinaryExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group_1__1__Impl
	rule__OrExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getOpAssignment_1_1()); }
	(rule__OrExpr__OpAssignment_1_1)
	{ after(grammarAccess.getOrExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getRightAssignment_1_2()); }
	(rule__OrExpr__RightAssignment_1_2)
	{ after(grammarAccess.getOrExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExpr__Group__0__Impl
	rule__BoolExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExprAccess().getRelExprParserRuleCall_0()); }
	ruleRelExpr
	{ after(grammarAccess.getBoolExprAccess().getRelExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExprAccess().getGroup_1()); }
	(rule__BoolExpr__Group_1__0)*
	{ after(grammarAccess.getBoolExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExpr__Group_1__0__Impl
	rule__BoolExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExprAccess().getBinaryExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBoolExprAccess().getBinaryExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExpr__Group_1__1__Impl
	rule__BoolExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExprAccess().getOpAssignment_1_1()); }
	(rule__BoolExpr__OpAssignment_1_1)
	{ after(grammarAccess.getBoolExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolExprAccess().getRightAssignment_1_2()); }
	(rule__BoolExpr__RightAssignment_1_2)
	{ after(grammarAccess.getBoolExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group__0__Impl
	rule__RelExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getAddExprParserRuleCall_0()); }
	ruleAddExpr
	{ after(grammarAccess.getRelExprAccess().getAddExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getGroup_1()); }
	(rule__RelExpr__Group_1__0)*
	{ after(grammarAccess.getRelExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group_1__0__Impl
	rule__RelExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getBinaryExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getRelExprAccess().getBinaryExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group_1__1__Impl
	rule__RelExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getOpAssignment_1_1()); }
	(rule__RelExpr__OpAssignment_1_1)
	{ after(grammarAccess.getRelExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getRightAssignment_1_2()); }
	(rule__RelExpr__RightAssignment_1_2)
	{ after(grammarAccess.getRelExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group__0__Impl
	rule__AddExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getMulExprParserRuleCall_0()); }
	ruleMulExpr
	{ after(grammarAccess.getAddExprAccess().getMulExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getGroup_1()); }
	(rule__AddExpr__Group_1__0)*
	{ after(grammarAccess.getAddExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1__0__Impl
	rule__AddExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getBinaryExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAddExprAccess().getBinaryExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1__1__Impl
	rule__AddExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getOpAssignment_1_1()); }
	(rule__AddExpr__OpAssignment_1_1)
	{ after(grammarAccess.getAddExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getRightAssignment_1_2()); }
	(rule__AddExpr__RightAssignment_1_2)
	{ after(grammarAccess.getAddExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulExpr__Group__0__Impl
	rule__MulExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulExprAccess().getSimpleExprParserRuleCall_0()); }
	ruleSimpleExpr
	{ after(grammarAccess.getMulExprAccess().getSimpleExprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulExprAccess().getGroup_1()); }
	(rule__MulExpr__Group_1__0)*
	{ after(grammarAccess.getMulExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulExpr__Group_1__0__Impl
	rule__MulExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulExprAccess().getBinaryExprLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMulExprAccess().getBinaryExprLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulExpr__Group_1__1__Impl
	rule__MulExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulExprAccess().getOpAssignment_1_1()); }
	(rule__MulExpr__OpAssignment_1_1)
	{ after(grammarAccess.getMulExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulExprAccess().getRightAssignment_1_2()); }
	(rule__MulExpr__RightAssignment_1_2)
	{ after(grammarAccess.getMulExprAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExpr__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpr__Group_2__0__Impl
	rule__SimpleExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExprAccess().getVarExprParserRuleCall_2_0()); }
	ruleVarExpr
	{ after(grammarAccess.getSimpleExprAccess().getVarExprParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExprAccess().getGroup_2_1()); }
	(rule__SimpleExpr__Group_2_1__0)?
	{ after(grammarAccess.getSimpleExprAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExpr__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpr__Group_2_1__0__Impl
	rule__SimpleExpr__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExprAccess().getTouchExprToucherAction_2_1_0()); }
	()
	{ after(grammarAccess.getSimpleExprAccess().getTouchExprToucherAction_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpr__Group_2_1__1__Impl
	rule__SimpleExpr__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExprAccess().getTouchesKeyword_2_1_1()); }
	'touches'
	{ after(grammarAccess.getSimpleExprAccess().getTouchesKeyword_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpr__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExprAccess().getToucheeAssignment_2_1_2()); }
	(rule__SimpleExpr__ToucheeAssignment_2_1_2)
	{ after(grammarAccess.getSimpleExprAccess().getToucheeAssignment_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExpr__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpr__Group_3__0__Impl
	rule__SimpleExpr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExprAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getSimpleExprAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpr__Group_3__1__Impl
	rule__SimpleExpr__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExprAccess().getExprParserRuleCall_3_1()); }
	ruleExpr
	{ after(grammarAccess.getSimpleExprAccess().getExprParserRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleExpr__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleExprAccess().getRightParenthesisKeyword_3_2()); }
	')'
	{ after(grammarAccess.getSimpleExprAccess().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group__0__Impl
	rule__UnaryExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getOpAssignment_0()); }
	(rule__UnaryExpr__OpAssignment_0)
	{ after(grammarAccess.getUnaryExprAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExprAccess().getOperandAssignment_1()); }
	(rule__UnaryExpr__OperandAssignment_1)
	{ after(grammarAccess.getUnaryExprAccess().getOperandAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getNameIDFTerminalRuleCall_1_0()); }
		RULE_IDF
		{ after(grammarAccess.getProgramAccess().getNameIDFTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getAttributesAttrAssListParserRuleCall_3_0()); }
		ruleAttrAssList
		{ after(grammarAccess.getProgramAccess().getAttributesAttrAssListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__DeclarationsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getDeclarationsDeclParserRuleCall_5_0()); }
		ruleDecl
		{ after(grammarAccess.getProgramAccess().getDeclarationsDeclParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__InitAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getInitStmtBlockParserRuleCall_6_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getProgramAccess().getInitStmtBlockParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__BlocksAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getBlocksBlockParserRuleCall_7_0()); }
		ruleBlock
		{ after(grammarAccess.getProgramAccess().getBlocksBlockParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVarDecl__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScalarVarDeclAccess().getNameIDFTerminalRuleCall_1_0()); }
		RULE_IDF
		{ after(grammarAccess.getScalarVarDeclAccess().getNameIDFTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVarDecl__InitializationAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScalarVarDeclAccess().getInitializationExprParserRuleCall_2_1_0()); }
		ruleExpr
		{ after(grammarAccess.getScalarVarDeclAccess().getInitializationExprParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVarDecl__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayVarDeclAccess().getNameIDFTerminalRuleCall_1_0()); }
		RULE_IDF
		{ after(grammarAccess.getArrayVarDeclAccess().getNameIDFTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVarDecl__SizeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayVarDeclAccess().getSizeINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getArrayVarDeclAccess().getSizeINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getTypeObjTypeEnumRuleCall_0_0()); }
		ruleObjType
		{ after(grammarAccess.getObjDeclAccess().getTypeObjTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getNameIDFTerminalRuleCall_1_0()); }
		RULE_IDF
		{ after(grammarAccess.getObjDeclAccess().getNameIDFTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getAttributesAttrAssListParserRuleCall_3_0()); }
		ruleAttrAssList
		{ after(grammarAccess.getObjDeclAccess().getAttributesAttrAssListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjArrayDecl__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjArrayDeclAccess().getTypeObjTypeEnumRuleCall_0_0()); }
		ruleObjType
		{ after(grammarAccess.getObjArrayDeclAccess().getTypeObjTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjArrayDecl__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjArrayDeclAccess().getNameIDFTerminalRuleCall_1_0()); }
		RULE_IDF
		{ after(grammarAccess.getObjArrayDeclAccess().getNameIDFTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjArrayDecl__SizeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjArrayDeclAccess().getSizeINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getObjArrayDeclAccess().getSizeINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__AssignmentsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssListAccess().getAssignmentsAttrAssParserRuleCall_0_0()); }
		ruleAttrAss
		{ after(grammarAccess.getAttrAssListAccess().getAssignmentsAttrAssParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__AssignmentsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssListAccess().getAssignmentsAttrAssParserRuleCall_1_1_0()); }
		ruleAttrAss
		{ after(grammarAccess.getAttrAssListAccess().getAssignmentsAttrAssParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__AttributeNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssAccess().getAttributeNameIDFTerminalRuleCall_0_0()); }
		RULE_IDF
		{ after(grammarAccess.getAttrAssAccess().getAttributeNameIDFTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssAccess().getValueExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getAttrAssAccess().getValueExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimBlockAccess().getNameIDFTerminalRuleCall_1_0()); }
		RULE_IDF
		{ after(grammarAccess.getAnimBlockAccess().getNameIDFTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__TargetAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimBlockAccess().getTargetAnimTargetParserRuleCall_3_0()); }
		ruleAnimTarget
		{ after(grammarAccess.getAnimBlockAccess().getTargetAnimTargetParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__ActionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimBlockAccess().getActionStmtBlockParserRuleCall_5_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getAnimBlockAccess().getActionStmtBlockParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimTarget__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimTargetAccess().getTypeObjTypeEnumRuleCall_0_0()); }
		ruleObjType
		{ after(grammarAccess.getAnimTargetAccess().getTypeObjTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimTarget__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimTargetAccess().getNameIDFTerminalRuleCall_1_0()); }
		RULE_IDF
		{ after(grammarAccess.getAnimTargetAccess().getNameIDFTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__KeyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventBlockAccess().getKeyKeyStrokeEnumRuleCall_1_0()); }
		ruleKeyStroke
		{ after(grammarAccess.getEventBlockAccess().getKeyKeyStrokeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__ActionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventBlockAccess().getActionStmtBlockParserRuleCall_2_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getEventBlockAccess().getActionStmtBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__StatementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStmtBlockAccess().getStatementsStmtParserRuleCall_2_0()); }
		ruleStmt
		{ after(grammarAccess.getStmtBlockAccess().getStatementsStmtParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getConditionExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getIfStmtAccess().getConditionExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ThenAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getThenStmtBlockParserRuleCall_4_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getIfStmtAccess().getThenStmtBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ElseAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getElseStmtBlockParserRuleCall_5_1_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getIfStmtAccess().getElseStmtBlockParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__InitAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getInitAssignmentParserRuleCall_2_0()); }
		ruleAssignment
		{ after(grammarAccess.getForStmtAccess().getInitAssignmentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__ConditionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getConditionExprParserRuleCall_4_0()); }
		ruleExpr
		{ after(grammarAccess.getForStmtAccess().getConditionExprParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__StepAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getStepAssignmentParserRuleCall_6_0()); }
		ruleAssignment
		{ after(grammarAccess.getForStmtAccess().getStepAssignmentParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__BodyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getBodyStmtBlockParserRuleCall_8_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getForStmtAccess().getBodyStmtBlockParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getVarVarParserRuleCall_0_0()); }
		ruleVar
		{ after(grammarAccess.getAssignmentAccess().getVarVarParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getValueExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getAssignmentAccess().getValueExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getVariableReferenceTargetCrossReference_0_0()); }
		(
			{ before(grammarAccess.getVarAccess().getVariableReferenceTargetIDFTerminalRuleCall_0_0_1()); }
			RULE_IDF
			{ after(grammarAccess.getVarAccess().getVariableReferenceTargetIDFTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getVarAccess().getVariableReferenceTargetCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__VariableAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getVariableReferenceTargetCrossReference_1_0_0()); }
		(
			{ before(grammarAccess.getVarAccess().getVariableReferenceTargetIDFTerminalRuleCall_1_0_0_1()); }
			RULE_IDF
			{ after(grammarAccess.getVarAccess().getVariableReferenceTargetIDFTerminalRuleCall_1_0_0_1()); }
		)
		{ after(grammarAccess.getVarAccess().getVariableReferenceTargetCrossReference_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__IndexAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getIndexExprParserRuleCall_1_2_0()); }
		ruleExpr
		{ after(grammarAccess.getVarAccess().getIndexExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__AttributeAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getAttributeIDFTerminalRuleCall_1_4_1_0()); }
		RULE_IDF
		{ after(grammarAccess.getVarAccess().getAttributeIDFTerminalRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__VariableAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getVariableReferenceTargetCrossReference_2_0_0()); }
		(
			{ before(grammarAccess.getVarAccess().getVariableReferenceTargetIDFTerminalRuleCall_2_0_0_1()); }
			RULE_IDF
			{ after(grammarAccess.getVarAccess().getVariableReferenceTargetIDFTerminalRuleCall_2_0_0_1()); }
		)
		{ after(grammarAccess.getVarAccess().getVariableReferenceTargetCrossReference_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__AttributeAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getAttributeIDFTerminalRuleCall_2_2_0()); }
		RULE_IDF
		{ after(grammarAccess.getVarAccess().getAttributeIDFTerminalRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExprAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getOrExprAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
			'||'
			{ after(grammarAccess.getOrExprAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getOrExprAccess().getOpVerticalLineVerticalLineKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExprAccess().getRightBoolExprParserRuleCall_1_2_0()); }
		ruleBoolExpr
		{ after(grammarAccess.getOrExprAccess().getRightBoolExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolExprAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getBoolExprAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
			'&&'
			{ after(grammarAccess.getBoolExprAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getBoolExprAccess().getOpAmpersandAmpersandKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolExprAccess().getRightRelExprParserRuleCall_1_2_0()); }
		ruleRelExpr
		{ after(grammarAccess.getBoolExprAccess().getRightRelExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelExprAccess().getOpAlternatives_1_1_0()); }
		(rule__RelExpr__OpAlternatives_1_1_0)
		{ after(grammarAccess.getRelExprAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelExprAccess().getRightAddExprParserRuleCall_1_2_0()); }
		ruleAddExpr
		{ after(grammarAccess.getRelExprAccess().getRightAddExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExprAccess().getOpAlternatives_1_1_0()); }
		(rule__AddExpr__OpAlternatives_1_1_0)
		{ after(grammarAccess.getAddExprAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExprAccess().getRightMulExprParserRuleCall_1_2_0()); }
		ruleMulExpr
		{ after(grammarAccess.getAddExprAccess().getRightMulExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulExprAccess().getOpAlternatives_1_1_0()); }
		(rule__MulExpr__OpAlternatives_1_1_0)
		{ after(grammarAccess.getMulExprAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpr__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulExprAccess().getRightSimpleExprParserRuleCall_1_2_0()); }
		ruleSimpleExpr
		{ after(grammarAccess.getMulExprAccess().getRightSimpleExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__ToucheeAssignment_2_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleExprAccess().getToucheeVarExprParserRuleCall_2_1_2_0()); }
		ruleVarExpr
		{ after(grammarAccess.getSimpleExprAccess().getToucheeVarExprParserRuleCall_2_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getOpAlternatives_0_0()); }
		(rule__UnaryExpr__OpAlternatives_0_0)
		{ after(grammarAccess.getUnaryExprAccess().getOpAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__OperandAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExprAccess().getOperandSimpleExprParserRuleCall_1_0()); }
		ruleSimpleExpr
		{ after(grammarAccess.getUnaryExprAccess().getOperandSimpleExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberExpr__NumberAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberExprAccess().getNumberINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberExprAccess().getNumberINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarExpr__VarAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarExprAccess().getVarVarParserRuleCall_0()); }
		ruleVar
		{ after(grammarAccess.getVarExprAccess().getVarVarParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_IDF : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
